{
    "name": "mr-mcoffee",
    "description": "ExpressJS Demo site",
    "version": "0.0.1",
    "private": true,
    "dependencies": {
        "aws-serverless-express": "3.1.3",
        "body-parser": "^1.18.3",
        "ejs": "^2.6.1",
        "express": "^4.16.4",
        "faker": "^4.1.0",
        "request": "^2.88.0",
        "uuid": "^3.3.2"
    },
    "devDependencies": {
        "aws-sdk-mock": "^4.4.0",
        "browser-sync": "^2.26.3",
        "connect-browser-sync": "^2.1.0",
        "cpx": "^1.5.0",
        "foreman": "^3.0.1",
        "mocha": "5.0.0",
        "nightwatch": "^1.0.19",
        "nodemon": "^1.18.11",
        "npm-run-all": "^4.1.5",
        "rimraf": "^2.6.3",
        "sinon": "^7.3.1",
        "startbootstrap-sb-admin-2": "^4.0.3",
        "supertest": "3.0.0",
        "unit.js": "2.0.0",
        "watch": "^1.0.2",
        "webdriver-manager": "^13.0.0"
    },
    "config": {
        "s3_bucket": "mr-mcoffee-harc",
        "stack_name": "development-mr-mcoffee-lambda",
        "code_deploy_role": "arn:aws:iam::411087959999:role/CodeStarWorker-mr-mcoffee-CodeDeploy",
        "project_id": "mr-mcoffee",
        "stage": "Development",
        "region": "ap-northeast-1",
        "chrome_driver_ver": "73.0.3683.103",
        "local_network": "lambda-local",
        "local_db": "dynamodb",
        "api_url": "https://dev-mr-mcoffee.hiroshima-arc.org"
    },
    "scripts": {
        "start": "nf start -j Procfile",
        "build": "npm-run-all aws:sam:build",
        "test": "npm-run-all test:*",
        "test:server": "mocha --recursive tests",
        "test:e2e": "nightwatch tests/e2e",
        "test:e2e:package": "npm-run-all test:e2e:package:*",
        "test:e2e:package:clean": "webdriver-manager clean",
        "test:e2e:package:update": "webdriver-manager update",
        "test:e2e:package:chrome": "webdriver-manager update --versions.chrome $npm_package_config_chrome_driver_ver",
        "watch": "watch 'npm run build' ./src ",
        "app:web": "browser-sync start --config bs-config.js",
        "app:api": "sam local start-api --host 0.0.0.0 --port 4000 --region $npm_package_config_region --env-vars env.json",
        "app:server": "PORT=5000 nodemon --inspect server.js",
        "db:setup": "npm-run-all db:setup:*",
        "db:setup:network": "docker network create $npm_package_config_local_network",
        "db:setup:db": "docker run -d -v $PWD:/dynamodb_local_db -p 8000:8000 --network $npm_package_config_local_network --name $npm_package_config_local_db instructure/dynamo-local-admin",
        "db:destroy": "npm-run-all db:destroy:db db:destroy:network",
        "db:destroy:network": "docker network rm $npm_package_config_local_network",
        "db:destroy:db": "docker rm -f $npm_package_config_local_db",
        "db:start": "docker start $npm_package_config_local_db",
        "db:stop": "docker stop $npm_package_config_local_db",
        "db:show": "open http://127.0.0.1:8000",
        "db:restart": "npm-run-all db:stop db:start",
        "db:migrate:create": "node ./scripts/Contact.js create",
        "db:migrate:drip": "node ./scripts/Contact.js drop",
        "db:migrate:seed": "node ./scripts/Contact.js seed",
        "aws:s3:create": "aws s3 mb s3://$npm_package_config_s3_bucket --region $npm_package_config_region",
        "aws:s3:destroy": "aws s3 rb s3://$npm_package_config_s3_bucket --force --region $npm_package_config_region",
        "aws:sam:build": "sam build",
        "aws:sam:package": "sam package --template-file .aws-sam/build/template.yaml --s3-bucket $npm_package_config_s3_bucket --output-template-file .aws-sam/build/packaged.yaml",
        "aws:sam:deploy": "sam deploy --template-file .aws-sam/build/packaged.yaml --stack-name $npm_package_config_stack_name --capabilities CAPABILITY_NAMED_IAM --parameter-overrides CodeDeployRole=$npm_package_config_code_deploy_role ProjectId=$npm_package_config_project_id Stage=$npm_package_config_stage ApiUrl=$npm_package_config_api_url --region $npm_package_config_region",
        "aws:sam:describe": "aws --region $npm_package_config_region cloudformation describe-stacks --stack-name $npm_package_config_stack_name",
        "aws:sam:release:dev": "npm-run-all test aws:sam:build aws:sam:package aws:sam:deploy aws:sam:describe",
        "aws:sam:destroy": "aws --region $npm_package_config_region cloudformation delete-stack --stack-name $npm_package_config_stack_name",
        "aws:codebuild:local": "docker run -it -v /var/run/docker.sock:/var/run/docker.sock -e \"IMAGE_NAME=aws/codebuild/nodejs:8.11.0\" -e \"ARTIFACTS=/tmp\" -e \"SOURCE=$PWD\" amazon/aws-codebuild-local",
        "docs:slide:server": "cd docs/PITCHME; browser-sync start --server --files '**/*'",
        "docs:slide:build": "cpx docs/PITCHME/assets/md/PITCHME.md .",
        "docs:slide:watch": "watch 'npm run docs:slide:build' ./docs --flilter=*.md"
    }
}
